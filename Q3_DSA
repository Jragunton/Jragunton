// Sample data for SELLER authentication
const users = {
  "seller1": "password123",
  "seller2": "password456"
};

// Sample categories with products for CUSTOMER
const categories = {
  "Pasta": [{ name: "Spaghetti", price: 50.00 }, { name: "Carbonara", price: 60.00 }, { name: "Bake macaroni", price: 55.00 }],
  "Desserts": [{ name: "Leche flan", price: 25.00 }, { name: "Cheesecake", price: 20.00 }, { name: "Brownie", price: 25.00 }],
  "Drinks": [{ name: "Coke", price: 15.00 }, { name: "Pepsi", price: 15.00}, { name: "Water", price: 15.00 }]
};

// Customer's cart
let cart = [];

// Function to authenticate seller
function authenticateSeller() {
  const username = prompt("Enter username: ");
  const password = prompt("Enter password: ");
  
  if (users[username] === password) {
    return true;
  } else {
    alert("Authentication failed. Returning to main menu.");
    return false;
  }
}

// Function to sort the cart based on total price of items
function sortCart() {
  return cart.sort((a, b) => b.total_price - a.total_price);
}

// Function for seller to add an item
function sellerAddItem() {
  const category = prompt("Which category to update (Pasta, Desserts, Drinks)? ").toUpperCase();
  if (categories[category]) {
    const name = prompt("Enter item name: ");
    const price = parseFloat(prompt("Enter price per item: "));
    categories[category].push({ name: name, price: price });
    alert(`Item '${name}' added to category '${category}'.`);
  } else {
    alert("Invalid category!");
  }
}

// Function for seller to remove an item
function sellerRemoveItem() {
  const category = prompt("Which category to update (Pasta, Desserts, Drinks)? ").toUpperCase();
  if (categories[category]) {
    const name = prompt("Enter item name to remove: ");
    const index = categories[category].findIndex(item => item.name.toLowerCase() === name.toLowerCase());
    if (index !== -1) {
      categories[category].splice(index, 1);
      alert(`Item '${name}' removed from category '${category}'.`);
    } else {
      alert("Item not found in the category!");
    }
  } else {
    alert("Invalid category!");
  }
}

// Function to display items for customer
function displayItems() {
  alert("\nAvailable Categories:");
  for (const category in categories) {
    alert(`\n${category}:`);
    categories[category].forEach(item => {
      alert(`- ${item.name} ($${item.price})`);
    });
  }
}

// Function for customer to add item to cart
function addToCart() {
  const category = prompt("Enter the category (Pasta, Desserts, Drinks): ").toUpperCase();
  if (categories[category]) {
    displayItems();
    const itemName = prompt("Enter the item you want to add to your cart: ");
    const quantity = parseInt(prompt("Enter quantity: "));
    const item = categories[category].find(i => i.name.toLowerCase() === itemName.toLowerCase());
    if (item) {
      cart.push({
        name: item.name,
        price: item.price,
        quantity: quantity,
        total_price: item.price * quantity
      });
      alert(`Added ${quantity} of ${item.name} to the cart.`);
    } else {
      alert("Item not found!");
    }
  } else {
    alert("Invalid category!");
  }
}

// Function for customer to view cart
function viewCart() {
  if (cart.length === 0) {
    alert("Your cart is empty!");
  } else {
    alert("\nYour Cart:");
    cart.forEach(item => {
      alert(`${item.name} - $${item.price} x ${item.quantity} = $${item.total_price}`);
    });
    alert(`Total Price: $${cart.reduce((total, item) => total + item.total_price, 0)}`);
  }
}

// Function for customer to remove item from cart
function removeFromCart() {
  const itemName = prompt("Enter the name of the item to remove: ");
  const index = cart.findIndex(item => item.name.toLowerCase() === itemName.toLowerCase());
  if (index !== -1) {
    cart.splice(index, 1);
    alert(`Removed ${itemName} from the cart.`);
  } else {
    alert("Item not found in cart!");
  }
}

// Function for customer to cancel cart
function cancelCart() {
  cart = [];
  alert("Cart has been canceled.");
}

// Main program loop
function main() {
  while (true) {
    const role = prompt("Are you a SELLER or CUSTOMER?").toUpperCase();
    if (role === "SELLER") {
      if (authenticateSeller()) {
        while (true) {
          const action = prompt("What would you like to do? (LOGOUT, ADD, REMOVE): ").toUpperCase();
          if (action === "LOGOUT") {
            alert("Logging out...");
            break;
          } else if (action === "ADD") {
            sellerAddItem();
          } else if (action === "REMOVE") {
            sellerRemoveItem();
          } else {
            alert("Invalid action. Try again.");
          }
        }
      }
    } else if (role === "CUSTOMER") {
      while (true) {
        displayItems();
        const action = prompt("What would you like to do? (ORDER, CART, CANCEL): ").toUpperCase();
        if (action === "ORDER") {
          addToCart();
        } else if (action === "CART") {
          while (true) {
            const cartAction = prompt("Cart options: PRINT, ADD, REMOVE, CANCEL: ").toUpperCase();
            if (cartAction === "PRINT") {
              cart = sortCart();
              viewCart();
            } else if (cartAction === "ADD") {
              addToCart();
            } else if (cartAction === "REMOVE") {
              removeFromCart();
            } else if (cartAction === "CANCEL") {
              cancelCart();
              break;
            } else {
              alert("Invalid action.");
            }
          }
        } else if (action === "CANCEL") {
          alert("Exiting... Goodbye!");
          break;
        } else {
          alert("Invalid action. Try again.");
        }
      }
    } else {
      alert("Invalid role. Please choose SELLER or CUSTOMER.");
    }
  }
}

// Run the program
main();
